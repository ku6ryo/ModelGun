// This file is generated by model file generator.
// Please do NOT edit.

{{#fields}}
{{#importFilePath}}
import {{type}} from "{{{importFilePath}}}"
{{/importFilePath}}
{{/fields}}
{{#hasUuid}}
import isUuid from "validator/es/lib/isUuid"
{{/hasUuid}}
{{#hasEmail}}
import isEmail from "validator/es/lib/isEmail"
{{/hasEmail}}
{{#hasUrl}}
import isUrl from "validator/es/lib/isUrl"
{{/hasUrl}}

export class UnexpectedNullError extends Error {
  constructor () {
    super("{{class}} UnexpectedNullError: If you see this, ModelGun validation may be broken.")
  }
}

export class InvalidPropertyError extends Error {
  constructor (message: string) {
    super("{{class}} UnexpectedNullError: " + message)
  }
}

export default class {{class}} {
  {{#fields}}
  #{{name}}: {{type}} | null = null
  {{/fields}}

  /**
  {{#fields}}
   * @param {{type}} {{name}} {{#description}}{{description}}{{/description}}
  {{/fields}}
   */
  constructor (
  {{#fields}}
    {{name}}: {{type}},
  {{/fields}}
  ) {
  {{#fields}}
    this.{{setterName}}({{name}})
  {{/fields}}
  }
  {{#fields}}

  /**
   * Gets {{name}}
   */
  {{getterName}} (): {{type}} {
    if (this.#{{name}} === null) {
      throw new UnexpectedNullError()
    }
    return this.#{{name}}
  }

  /**
   * Sets {{name}}
   * @param value
   */
  {{setterName}} (value: {{type}}) {
    {{#isUuid}}
    if (!isUuid(value)) {
      throw new InvalidPropertyError(`${value} is not UUID value. ({{class}}.{{setterName}})`)
    }
    {{/isUuid}}
    {{#isEmail}}
    if (!isEmail(value)) {
      throw new InvalidPropertyError(`${value} is not Email value. ({{class}}.{{setterName}})`)
    }
    {{/isEmail}}
    {{#isUrl}}
    if (!isUrl(value)) {
      throw new InvalidPropertyError(`${value} is not URL value. ({{class}}.{{setterName}})`)
    }
    {{/isUrl}}
    {{#minLength}}
    if (value.length < {{minLength}}) {
      throw new InvalidPropertyError(`${value} is shorter than {{minLength}}. ({{class}}.{{setterName}})`)
    }
    {{/minLength}}
    {{#maxLength}}
    if (value.length > {{maxLength}}) {
      throw new InvalidPropertyError(`${value} is longer than {{maxLength}}. ({{class}}.{{setterName}})`)
    }
    {{/maxLength}}
    {{#regex}}
    if (!/{{regex}}/.test(value)) {
      throw new InvalidPropertyError(`${value} does not match {{regex}}. ({{class}}.{{setterName}})`)
    }
    {{/regex}}
    {{#max}}
    if (value > {{max}}) {
      throw new InvalidPropertyError(`${value} is more than {{max}}. ({{class}}.{{setterName}})`)
    }
    {{/max}}
    {{#min}}
    if (value < {{min}}) {
      throw new InvalidPropertyError(`${value} is less than {{min}}. ({{class}}.{{setterName}})`)
    }
    {{/min}}
    this.#{{name}} = value
  }
  {{/fields}}
}
