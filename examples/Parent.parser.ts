// This file is auto-generated by ModelGun code generator.
// https://github.com/ku6ryo/ModelGun
// PLEASE DO NOT EDIT. If you want to extend the functionality, please import
// the export members and use as a part or inherit class.

import Parent from "./Parent.model"
import Child from "./Child.model"
import parseChild from "./Child.parser"

export class ParseError extends Error {
  constructor (message: string) {
    super("parseParent ParseError: " + message)
  }
}

export default function parseParent (data: any) {
  if (typeof data !== "object") {
    throw new ParseError("Given data is not an object. " + String(data))
  }
  const tmp_children = data["children"]
  if (!Array.isArray(tmp_children)) {
    throw new ParseError("children is not an array")
  }
  const children: Child[] = tmp_children.map((item, i) => {
    if (typeof item !== "object") {
      throw new ParseError(`Item of children with index ${i} is not a object.`)
    }
    return parseChild(item)
  })
  return new Parent(
    children,
  )
}
