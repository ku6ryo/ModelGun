// This file is auto-generated by ModelGun code generator.
// https://github.com/ku6ryo/ModelGun
// PLEASE DO NOT EDIT. If you want to extend the functionality, please import
// the export members and use as a part or inherit class.

import Child from "./Child.model"

export class UnexpectedNullError extends Error {
  constructor () {
    super("Parent UnexpectedNullError: If you see this, generated code by modelgun may be broken.")
  }
}

export class InvalidPropertyError extends Error {
  constructor (message: string) {
    super("Parent InvalidPropertyError: " + message)
  }
}

/**
 * Parent model.
 * This is an example model of a parent.
 */
export default class Parent {
  #children: Child[] | null = null

  /**
   * @param Child[] children This property is for to hold models defined as another model.
   */
  constructor (
    children: Child[],
  ) {
    this.setChildren(children)
  }

  /**
   * Gets children
   */
  getChildren (): Child[] {
    if (this.#children === null) {
      throw new UnexpectedNullError()
    }
    return this.#children
  }

  /**
   * Checks children
   */
  checkChildren (value: Child) {
  }

  /**
   * Sets children
   * @param value
   */
  setChildren (value: Child[]) {
    for (let i  = 0; i < value.length; i++) {
      this.checkChildren(value[i])
    }
    this.#children = value
  }

  /**
   * Clones 
   */
  clone (shallow: boolean) {
    return new Parent (
      shallow ? this.getChildren() : this.getChildren().map(item => item.clone(false)),
    )
  }

  /**
   * Creates an object.
   */
  toObject () {
    return {
      children: this.getChildren().map(item => item.toObject()),
    }
  }
}
