// This file is auto-generated by ModelGun code generator.
// https://github.com/ku6ryo/ModelGun
// PLEASE DO NOT EDIT. If you want to extend the functionality, please import
// the export members and use as a part or inherit class.

// This is header
// Multiple line.
// You can specify anythin like imports from non-supported validators.
// import isFoo from "bar/isFoo"

import isUuid from "validator/lib/isUuid"

export class UnexpectedNullError extends Error {
  constructor () {
    super("Example UnexpectedNullError: If you see this, ModelGun validation may be broken.")
  }
}

export class InvalidPropertyError extends Error {
  constructor (message: string) {
    super("Example InvalidPropertyError: " + message)
  }
}

/**
 * Example model.
 * This is an example model of person.
 */
export default class Example {
  #id: string | null = null
  #name: string | null = null
  #age: number | null = null
  #height: number | null = null
  #isAlien: boolean | null = null

  /**
   * @param string id First Name
   * @param string name Name of a person.
   * @param number age Age of aperson.
   * @param number height Height of a person in centi meters
   * @param boolean isAlien Whether the person is alien or not.
   */
  constructor (
    id: string,
    name: string,
    age: number,
    height: number,
    isAlien: boolean,
  ) {
    this.setId(id)
    this.setName(name)
    this.setAge(age)
    this.setHeight(height)
    this.setIsAlien(isAlien)
  }

  /**
   * Gets id
   */
  getId (): string {
    if (this.#id === null) {
      throw new UnexpectedNullError()
    }
    return this.#id
  }

  /**
   * Checks id
   */
  checkId (value: string) {
    if (!isUuid(value)) {
      throw new InvalidPropertyError(`${value} is not UUID value. (Example.setId)`)
    }
  }

  /**
   * Sets id
   * @param value
   */
  setId (value: string) {
    this.checkId(value)
    this.#id = value
  }

  /**
   * Gets name
   */
  getName (): string {
    if (this.#name === null) {
      throw new UnexpectedNullError()
    }
    return this.#name
  }

  /**
   * Checks name
   */
  checkName (value: string) {
  }

  /**
   * Sets name
   * @param value
   */
  setName (value: string) {
    this.checkName(value)
    this.#name = value
  }

  /**
   * Gets age
   */
  getAge (): number {
    if (this.#age === null) {
      throw new UnexpectedNullError()
    }
    return this.#age
  }

  /**
   * Checks age
   */
  checkAge (value: number) {
    if (value > 150) {
      throw new InvalidPropertyError(`${value} is more than 150. (Example.setAge)`)
    }
    if (value % 1 !== 0) {
      throw new InvalidPropertyError(`${value} is not an integer. (Example.setAge)`)
    }
  }

  /**
   * Sets age
   * @param value
   */
  setAge (value: number) {
    this.checkAge(value)
    this.#age = value
  }

  /**
   * Gets height
   */
  getHeight (): number {
    if (this.#height === null) {
      throw new UnexpectedNullError()
    }
    return this.#height
  }

  /**
   * Checks height
   */
  checkHeight (value: number) {
    if (value > 300) {
      throw new InvalidPropertyError(`${value} is more than 300. (Example.setHeight)`)
    }
  }

  /**
   * Sets height
   * @param value
   */
  setHeight (value: number) {
    this.checkHeight(value)
    this.#height = value
  }

  /**
   * Gets isAlien
   */
  getIsAlien (): boolean {
    if (this.#isAlien === null) {
      throw new UnexpectedNullError()
    }
    return this.#isAlien
  }

  /**
   * Checks isAlien
   */
  checkIsAlien (value: boolean) {
  }

  /**
   * Sets isAlien
   * @param value
   */
  setIsAlien (value: boolean) {
    this.checkIsAlien(value)
    this.#isAlien = value
  }

  /**
   * Clones 
   */
  clone (shallow: boolean) {
    return new Example (
      this.getId(),
      this.getName(),
      this.getAge(),
      this.getHeight(),
      this.getIsAlien(),
    )
  }

  /**
   * Creates an object.
   */
  toObject () {
    return {
      id: this.getId(),
      name: this.getName(),
      age: this.getAge(),
      height: this.getHeight(),
      isAlien: this.getIsAlien(),
    }
  }
}
